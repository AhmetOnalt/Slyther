package net.gegy1000.slyther.game;

import java.util.HashMap;
import java.util.Map;
import static net.gegy1000.slyther.game.SkinColor.*;

public enum SkinColorHandler {
    INSTANCE;

    private final Map<Skin, SkinColor[]> PATTERNS = new HashMap<>();

    SkinColorHandler() {
        PATTERNS.put(Skin.AMERICA, new SkinColor[] { LIGHT_RED, WHITE, LIGHT_RED, WHITE, LIGHT_RED, WHITE, LIGHT_RED, WHITE, LIGHT_RED, WHITE, LIGHT_RED, CORNFLOWER_BLUE, CORNFLOWER_BLUE, CORNFLOWER_BLUE, CORNFLOWER_BLUE, CORNFLOWER_BLUE, CORNFLOWER_BLUE, CORNFLOWER_BLUE, CORNFLOWER_BLUE, CORNFLOWER_BLUE });
        PATTERNS.put(Skin.BLUE_WHITE_RED_STRIPE, new SkinColor[] { WHITE, WHITE, WHITE, WHITE, WHITE, LIGHT_BLUE_1, LIGHT_BLUE_1, LIGHT_BLUE_1, LIGHT_BLUE_1, LIGHT_BLUE_1, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED });
        PATTERNS.put(Skin.GERMANY, new SkinColor[] { GRAY_1, GRAY_1, GRAY_1, GRAY_1, GRAY_1, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, YELLOW, YELLOW, YELLOW, YELLOW, YELLOW });
        PATTERNS.put(Skin.WHITE_RED_GREEN_STRIPE, new SkinColor[] { LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, WHITE, WHITE, WHITE, WHITE, WHITE, BLUEY_GREEN, BLUEY_GREEN, BLUEY_GREEN, BLUEY_GREEN, BLUEY_GREEN });
        PATTERNS.put(Skin.WHITE_BLUE_RED_STRIPE, new SkinColor[] { LIGHT_BLUE_2, LIGHT_BLUE_2, LIGHT_BLUE_2, LIGHT_BLUE_2, LIGHT_BLUE_2, WHITE, WHITE, WHITE, WHITE, WHITE, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED });
        PATTERNS.put(Skin.WHITE_RED_STRIPE, new SkinColor[] { WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED });
        PATTERNS.put(Skin.RAINBOW, new SkinColor[] { LIGHT_PURPLE_1, LIGHT_BLUE_1, CYAN, LIGHT_GREEN, LIGHT_YELLOW_1, LIGHT_ORANGE, PINK, LIGHT_RED, MAGENTA });
        PATTERNS.put(Skin.SWEDEN, new SkinColor[] { LIGHT_BLUE_3, LIGHT_BLUE_3, LIGHT_BLUE_3, LIGHT_BLUE_3, LIGHT_BLUE_3, LIGHT_BLUE_3, LIGHT_BLUE_3, LIGHT_YELLOW_1, LIGHT_YELLOW_1, LIGHT_YELLOW_1, LIGHT_YELLOW_1, LIGHT_YELLOW_1, LIGHT_YELLOW_1, LIGHT_YELLOW_1 });
        PATTERNS.put(Skin.BLUE_WHITE_STRIPE, new SkinColor[] { WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_BLUE_4 });
        PATTERNS.put(Skin.RED_WHITE_STRIPE, new SkinColor[] { LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE });
        PATTERNS.put(Skin.WHITE, new SkinColor[] { WHITE });
        PATTERNS.put(Skin.PURPLE_GREEN_STRIPE, new SkinColor[] { LIGHT_GREEN, LIGHT_GREEN, LIGHT_GREEN, LIGHT_GREEN, LIGHT_GREEN, LIGHT_PURPLE_1, LIGHT_PURPLE_1, LIGHT_PURPLE_1, LIGHT_PURPLE_1, LIGHT_PURPLE_1 });
        PATTERNS.put(Skin.YELLOW_GREEN_BLUE_STRIPE, new SkinColor[] { LIGHT_GREEN, LIGHT_GREEN, LIGHT_GREEN, LIGHT_GREEN, LIGHT_GREEN, LIGHT_GREEN, LIGHT_GREEN, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2,  BLUE_2, BLUE_1,  BLUE_2, BLUE_1,  BLUE_2, BLUE_1,  BLUE_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2 });
        PATTERNS.put(Skin.YELLOW_WHITE_ORANGE_STRIPE, new SkinColor[] { LIGHT_ORANGE, LIGHT_ORANGE, LIGHT_ORANGE, LIGHT_ORANGE, LIGHT_ORANGE, LIGHT_ORANGE, LIGHT_ORANGE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, BLUEY_GREEN, BLUEY_GREEN, BLUEY_GREEN, BLUEY_GREEN, BLUEY_GREEN, BLUEY_GREEN, BLUEY_GREEN });
        PATTERNS.put(Skin.RED_YELLOW_BLUE_STRIPE, new SkinColor[] { LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_BLUE_4, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED });
        PATTERNS.put(Skin.ARCADE_GO, new SkinColor[] {  LIGHT_BLUE_5,  LIGHT_BLUE_5,  LIGHT_BLUE_5,  LIGHT_BLUE_5,  LIGHT_BLUE_5,  LIGHT_BLUE_5,  LIGHT_BLUE_5,  LIGHT_BLUE_5,  LIGHT_BLUE_5, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2 });
        PATTERNS.put(Skin.ORANGE_BLUE_STRIPE_HEAD_TAIL, new SkinColor[] {  DARK_PURPLE,  DARK_PURPLE,  DARK_PURPLE,  DARK_PURPLE,  DARK_PURPLE,  DARK_PURPLE,  DARK_PURPLE,  DARK_PURPLE,  DARK_PURPLE,  DARK_PURPLE,  DARK_PURPLE,  DARK_PURPLE,  ORANGE,  ORANGE,  ORANGE,  ORANGE,  ORANGE,  ORANGE,  ORANGE,  ORANGE, ORANGE });
        PATTERNS.put(Skin.SILVER_GOLD_OUTLINE, new SkinColor[] { GRAY_2 });
        PATTERNS.put(Skin.GREEN_EYEBALL, new SkinColor[] { GREEN });
        PATTERNS.put(Skin.RED_GREEN_YELLOW, new SkinColor[] { LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2, LIGHT_YELLOW_2,  GREEN,  GREEN,  GREEN,  GREEN,  GREEN,  GREEN,  GREEN, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED, LIGHT_RED });
        PATTERNS.put(Skin.BLACK_SMALL_YELLOW_STRIPE, new SkinColor[] { GRAY_1, GRAY_1, LIGHT_YELLOW_1, GRAY_1, GRAY_1, GRAY_1, GRAY_1, LIGHT_YELLOW_1, GRAY_1, GRAY_1 });
        PATTERNS.put(Skin.LIGHT_BLUE_BLUE_STRIPE_STARS, new SkinColor[] { CORNFLOWER_BLUE, CORNFLOWER_BLUE, BLUE_1,  BLUE_2, CORNFLOWER_BLUE, CORNFLOWER_BLUE,  BLUE_2, BLUE_1 });
        PATTERNS.put(Skin.LIGHT_BLUE_STARS, new SkinColor[] { CORNFLOWER_BLUE, CORNFLOWER_BLUE });
        PATTERNS.put(Skin.BLUE_STARS, new SkinColor[] {  BLUE_2, BLUE_2 });
        PATTERNS.put(Skin.BUMBLEBEE, new SkinColor[] { YELLOW, GRAY_1, GRAY_1 });
        PATTERNS.put(Skin.COLORFUL_STRIPES, new SkinColor[] { LIGHT_RED, LIGHT_RED, WHITE, BLUEY_GREEN, BLUEY_GREEN, WHITE, LIGHT_BLUE_4, LIGHT_BLUE_4, WHITE, YELLOW, YELLOW, WHITE, LIGHT_RED, LIGHT_RED, WHITE, LIGHT_BLUE_4, LIGHT_BLUE_4, WHITE });
        PATTERNS.put(Skin.PINK_WHITE_RED_STRIPE, new SkinColor[] { LIGHT_RED, LIGHT_RED, WHITE, WHITE, PINK, PINK, WHITE, WHITE });
        PATTERNS.put(Skin.LIGHT_BLUE_WHITE_BLUE_STRIPE, new SkinColor[] { LIGHT_BLUE_4, LIGHT_BLUE_4, WHITE, WHITE, LIGHT_BLUE_3, LIGHT_BLUE_3, WHITE, WHITE });
        PATTERNS.put(Skin.BRIGHT_ORANGE, new SkinColor[] { ORANGE });
        PATTERNS.put(Skin.BRIGHT_YELLOW, new SkinColor[] { LIGHT_YELLOW_2 });
    }

    public SkinColor[] getPattern(Skin skin) {
        return PATTERNS.get(skin);
    }
}
